class update_dbw_mkz_msgs_GearReport_f33342dfeb80c29d8fe4b31e22519594(MessageUpdateRule):
	old_type = "dbw_mkz_msgs/GearReport"
	old_full_text = """
Header header

# Current gear enumeration
Gear state

# Gear command enumeration
Gear cmd

# Status
bool override

# Faults
bool fault_bus

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: dbw_mkz_msgs/Gear
uint8 gear

uint8 NONE=0
uint8 PARK=1
uint8 REVERSE=2
uint8 NEUTRAL=3
uint8 DRIVE=4
uint8 LOW=5
"""

	new_type = "dbw_mkz_msgs/GearReport"
	new_full_text = """
Header header

# Current gear enumeration
Gear state

# Gear command enumeration
Gear cmd

# Gear reject enumeration
GearReject reject

# Status
bool override

# Faults
bool fault_bus

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: dbw_mkz_msgs/Gear
uint8 gear

uint8 NONE=0
uint8 PARK=1
uint8 REVERSE=2
uint8 NEUTRAL=3
uint8 DRIVE=4
uint8 LOW=5

================================================================================
MSG: dbw_mkz_msgs/GearReject
uint8 value

uint8 NONE=0              # Not rejected
uint8 SHIFT_IN_PROGRESS=1 # Shift in progress
uint8 OVERRIDE=2          # Override on brake, throttle, or steering
uint8 ROTARY_LOW=3        # Rotary shifter can't shift to Low
uint8 ROTARY_PARK=4       # Rotary shifter can't shift out of Park
uint8 VEHICLE=5           # Rejected by vehicle (try pressing the brakes)
"""

	order = 2
	migrated_types = [
		("Header","Header"),
		("Gear","Gear"),]

	valid = True

	def update(self, old_msg, new_msg):
		self.migrate(old_msg.header, new_msg.header)
		self.migrate(old_msg.state, new_msg.state)
		self.migrate(old_msg.cmd, new_msg.cmd)
		new_msg.reject = self.get_new_class('dbw_mkz_msgs/GearReject')()
		new_msg.override = old_msg.override
		new_msg.fault_bus = old_msg.fault_bus
